Description: >-
  Creates Subnets for FSx to be used in SageMaker for large scale distributed training
Parameters:
  AZ:
    Description: Availablity Zone
    Type: String

  VPCID:
    Description: VPC Id
    Type: String
    
  IGWID:
    Description: IGW Id
    Type: String
    
  PUBLICSUBNETCIDRBLOCK:
    Description: Public Subnet Cidr Block
    Type: String

  PRIVATESUBNETCIDRBLOCK:
    Description: Private Subnet Cidr Block
    Type: String



Resources:
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PUBLICSUBNETCIDRBLOCK
      VpcId: !Ref VPCID
      AvailabilityZone: !Ref AZ
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join: 
            - ''
            - 
              - !Ref 'AWS::StackName'
              - '/'
              - 'PublicSubnet'
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  PublicSubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGWID
  PublicNATGatewayEIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  PublicNATGateway:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt 
        - PublicNATGatewayEIP
        - AllocationId
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  PrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: !Ref PRIVATESUBNETCIDRBLOCK
      VpcId: !Ref VPCID
      AvailabilityZone: !Ref AZ
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value:
            Fn::Join: 
            - ''
            - 
              - !Ref 'AWS::StackName'
              - '/'
              - 'PrivateSubnet'
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPCID
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  PrivateSubnetRouteAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref PublicNATGateway
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: SecurityGroup
      GroupName: !Ref 'AWS::StackName'
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: ssh from anywhere (to enable ec2 mount fsx - if required for debugging)
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
      VpcId: !Ref VPCID
  SecurityGroupEgressAllTraffic:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      CidrIp: 0.0.0.0/0
      IpProtocol: '-1'
      Description: Allow all outbound traffic by default
      GroupId: !GetAtt 
        - SecurityGroup
        - GroupId
  SecurityGroupEgressAllTrafficFromSelf:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      IpProtocol: '-1'
      Description: Allow all within sg
      GroupId: !GetAtt 
        - SecurityGroup
        - GroupId
      SourceSecurityGroupId: !GetAtt 
        - SecurityGroup
        - GroupId
  SecurityGroupIngressTCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      Description: 'from 988-1023'
      FromPort: 988
      GroupId: !GetAtt 
        - SecurityGroup
        - GroupId
      SourceSecurityGroupId: !GetAtt 
        - SecurityGroup
        - GroupId
      ToPort: 1023
  FSx:
    Type: 'AWS::FSx::FileSystem'
    Properties:
      FileSystemType: LUSTRE
      FileSystemTypeVersion: "2.12"
      SubnetIds:
        - !Ref PrivateSubnet
      LustreConfiguration:
        DeploymentType: PERSISTENT_2
        DataCompressionType: LZ4
        PerUnitStorageThroughput: 500
      SecurityGroupIds:
        - !GetAtt 
          - SecurityGroup
          - GroupId
      StorageCapacity: 1200
      Tags:
        - Key: "Name"
          Value: !Ref 'AWS::StackName'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
Outputs:
  vpc:
    Value: !Ref VPCID
  sg:
    Value: !GetAtt 
      - SecurityGroup
      - GroupId
  publicsubnet:
    Value: !Ref PublicSubnet
  privatesubnet:
    Value: !Ref PrivateSubnet
  az:
    Value: !GetAtt 
      - PrivateSubnet
      - AvailabilityZone
  fsx:
    Value: !Ref FSx
